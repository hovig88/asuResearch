for (i in 1:5) {
marital_status_effect[i,j] ~ dnorm(0, 1/sd_marital_status^2)
}
}
## HYPERPRIORS ##
sd_ethnic_group ~ dexp(4)
sd_territorial_section ~ dexp(2)
sd_clan ~ dexp(4)
sd_marital_status ~ dexp(3)
} "
#running the model in JAGS
n.chains = 3
n.iter = 1000
model <- jags.model(textConnection(model_string), data=data, n.chains=n.chains)
nodes <- c("beta", "marital_status_effect", "sd_marital_status",
"ethnic_group_effect", "sd_ethnic_group",
"territorial_section_effect", "sd_territorial_section",
"base_clan", "sd_clan")
samples <- coda.samples(model=model, variable.names=nodes, n.iter=n.iter, thin=1)
crosscorr.plot(samples)
#dnorm(0, 1/1^2)
#building the model in JAGS
model_string = "
model {
for (j in c(1,49)) {
## LIKELIHOOD ##
for (i in 1:745) {
Y[i,j] ~ dbern(p[i,j])
logit(p[i,j]) <- base_clan[clan[i] + 1,j] +
beta[2,j]*sex[i] +
beta[3,j]*school_yrs[i] +
beta[4,j]*town_yrs[i] +
marital_status_effect[marital_status[i] + 1,j]
}
## PRIORS ##
for (i in c(1:3,7:9)) {
base_clan[i,j] ~ dnorm(ethnic_group_effect[ethnic_group[i] +1,j], 1/sd_clan^2)
}
for (i in 4:6) {
base_clan[i,j] ~ dnorm(territorial_section_effect[territorial_section[i] + 1,j]*equals(ethnic_group[i], 3), 1/sd_clan^2)
}
for (i in 1:4) {
ethnic_group_effect[i,j] ~ dnorm(beta[1,j], 1/sd_ethnic_group^2)
}
for (i in 1:4) {
territorial_section_effect[i,j] ~ dnorm(0, 1/sd_territorial_section^2)
}
beta[1,j] ~ dnorm(0, 1/0.5^2)
for(i in 2:4){
beta[i,j] ~ dnorm(0, 1/0.5^2)
}
for (i in 1:5) {
marital_status_effect[i,j] ~ dnorm(0, 1/sd_marital_status^2)
}
}
## HYPERPRIORS ##
sd_ethnic_group ~ dexp(4)
sd_territorial_section ~ dexp(2)
sd_clan ~ dexp(4)
sd_marital_status ~ dexp(3)
} "
#running the model in JAGS
n.chains = 3
n.iter = 1000
model <- jags.model(textConnection(model_string), data=data, n.chains=n.chains)
nodes <- c("beta", "marital_status_effect", "sd_marital_status",
"ethnic_group_effect", "sd_ethnic_group",
"territorial_section_effect", "sd_territorial_section",
"base_clan", "sd_clan")
samples <- coda.samples(model=model, variable.names=nodes, n.iter=n.iter, thin=1)
crosscorr.plot(samples)
#dnorm(0, 1/1^2)
#building the model in JAGS
model_string = "
model {
for (j in c(1,49)) {
## LIKELIHOOD ##
for (i in 1:745) {
Y[i,j] ~ dbern(p[i,j])
logit(p[i,j]) <- base_clan[clan[i] + 1,j] +
beta[2,j]*sex[i] +
beta[3,j]*school_yrs[i] +
beta[4,j]*town_yrs[i] +
marital_status_effect[marital_status[i] + 1,j]
}
## PRIORS ##
for (i in c(1:3,7:9)) {
base_clan[i,j] ~ dnorm(ethnic_group_effect[ethnic_group[i] +1,j], 1/sd_clan^2)
}
for (i in 4:6) {
base_clan[i,j] ~ dnorm(territorial_section_effect[territorial_section[i] + 1,j]*equals(ethnic_group[i], 3), 1/sd_clan^2)
}
for (i in 1:4) {
ethnic_group_effect[i,j] ~ dnorm(beta[1,j], 1/sd_ethnic_group^2)
}
for (i in 1:4) {
territorial_section_effect[i,j] ~ dnorm(0, 1/sd_territorial_section^2)
}
beta[1,j] ~ dnorm(0, 1/0.75^2)
for(i in 2:4){
beta[i,j] ~ dnorm(0, 1/0.5^2)
}
for (i in 1:5) {
marital_status_effect[i,j] ~ dnorm(0, 1/sd_marital_status^2)
}
}
## HYPERPRIORS ##
sd_ethnic_group ~ dexp(4)
sd_territorial_section ~ dexp(2)
sd_clan ~ dexp(4)
sd_marital_status ~ dexp(3)
} "
#running the model in JAGS
n.chains = 3
n.iter = 1000
model <- jags.model(textConnection(model_string), data=data, n.chains=n.chains)
nodes <- c("beta", "marital_status_effect", "sd_marital_status",
"ethnic_group_effect", "sd_ethnic_group",
"territorial_section_effect", "sd_territorial_section",
"base_clan", "sd_clan")
samples <- coda.samples(model=model, variable.names=nodes, n.iter=n.iter, thin=1)
crosscorr.plot(samples)
hist(effectiveSize(samples))
range(effectiveSize(samples))
#dnorm(0, 1/1^2)
#building the model in JAGS
model_string = "
model {
for (j in c(1,49)) {
## LIKELIHOOD ##
for (i in 1:745) {
Y[i,j] ~ dbern(p[i,j])
logit(p[i,j]) <- base_clan[clan[i] + 1,j] +
beta[2,j]*sex[i] +
beta[3,j]*school_yrs[i] +
beta[4,j]*town_yrs[i] +
marital_status_effect[marital_status[i] + 1,j]
}
## PRIORS ##
for (i in c(1:3,7:9)) {
base_clan[i,j] ~ dnorm(ethnic_group_effect[ethnic_group[i] +1,j], 1/sd_clan^2)
}
for (i in 4:6) {
base_clan[i,j] ~ dnorm(territorial_section_effect[territorial_section[i] + 1,j]*equals(ethnic_group[i], 3), 1/sd_clan^2)
}
for (i in 1:4) {
ethnic_group_effect[i,j] ~ dnorm(beta[1,j], 1/sd_ethnic_group^2)
}
for (i in 1:4) {
territorial_section_effect[i,j] ~ dnorm(0, 1/sd_territorial_section^2)
}
beta[1,j] ~ dnorm(0, 1/0.75^2)
for(i in 2:4){
beta[i,j] ~ dnorm(0, 1/0.5^2)
}
for (i in 1:5) {
marital_status_effect[i,j] ~ dnorm(0, 1/sd_marital_status^2)
}
}
## HYPERPRIORS ##
sd_ethnic_group ~ dexp(3)
sd_territorial_section ~ dexp(2)
sd_clan ~ dexp(3)
sd_marital_status ~ dexp(3)
} "
#running the model in JAGS
n.chains = 3
n.iter = 1000
model <- jags.model(textConnection(model_string), data=data, n.chains=n.chains)
nodes <- c("beta", "marital_status_effect", "sd_marital_status",
"ethnic_group_effect", "sd_ethnic_group",
"territorial_section_effect", "sd_territorial_section",
"base_clan", "sd_clan")
samples <- coda.samples(model=model, variable.names=nodes, n.iter=n.iter, thin=1)
crosscorr.plot(samples)
hist(effectiveSize(samples))
range(effectiveSize(samples))
beta_cors = data.frame()
clan_cors = data.frame()
ethnic_group_cors = data.frame()
marital_status_cors = data.frame()
sd_cors = data.frame()
sd_params = c("sd_clan", "sd_ethnic_group", "sd_marital_status", "sd_subclan", "sd_territorial_section")
subclan_cors = data.frame()
territorial_section_cors = data.frame()
for(j in c(1,49)){
for(i in 1:6){
s = paste0("beta[",i,",",j,"]")
beta_cors = rbind(beta_cors, high_cors[s == high_cors$col.param,])
}
for(i in 1:9){
s = paste0("clan_effect[",i,",",j,"]")
clan_cors = rbind(clan_cors, high_cors[s == high_cors$col.param,])
}
for(i in 1:4){
s = paste0("ethnic_group_effect[",i,",",j,"]")
ethnic_group_cors = rbind(ethnic_group_cors, high_cors[s == high_cors$col.param,])
}
for(i in 1:5){
s = paste0("marital_status_effect[",i,",",j,"]")
marital_status_cors = rbind(marital_status_cors, high_cors[s == high_cors$col.param,])
}
for(i in 1:5){
sd_cors = rbind(sd_cors, high_cors[sd_params[i] == high_cors$col.param,])
}
for(i in 1:33){
s = paste0("subclan_effect[",i,",",j,"]")
subclan_cors = rbind(subclan_cors, high_cors[s == high_cors$col.param,])
}
for(i in 1:4){
s = paste0("territorial_section_effect[",i,",",j,"]")
territorial_section_cors = rbind(territorial_section_cors, high_cors[s == high_cors$col.param,])
}
}
View(high_cors)
#dnorm(0, 1/1^2)
#building the model in JAGS
model_string = "
model {
for (j in c(1,49)) {
## LIKELIHOOD ##
for (i in 1:745) {
Y[i,j] ~ dbern(p[i,j])
logit(p[i,j]) <- base_clan[clan[i] + 1,j] +
beta[2,j]*sex[i] +
beta[3,j]*school_yrs[i] +
beta[4,j]*town_yrs[i] +
marital_status_effect[marital_status[i] + 1,j]
}
## PRIORS ##
for (i in c(1:3,7:9)) {
base_clan[i,j] ~ dnorm(ethnic_group_effect[ethnic_group[i] +1,j], 1/sd_clan^2)
}
for (i in 4:6) {
base_clan[i,j] ~ dnorm(territorial_section_effect[territorial_section[i] + 1,j]*equals(ethnic_group[i], 3), 1/sd_clan^2)
}
for (i in 1:4) {
ethnic_group_effect[i,j] ~ dnorm(beta[1,j], 1/sd_ethnic_group^2)
}
for (i in 1:4) {
territorial_section_effect[i,j] ~ dnorm(beta[1,j], 1/sd_territorial_section^2)
}
beta[1,j] ~ dnorm(0, 1/0.75^2)
for(i in 2:4){
beta[i,j] ~ dnorm(0, 1/0.5^2)
}
for (i in 1:5) {
marital_status_effect[i,j] ~ dnorm(0, 1/sd_marital_status^2)
}
}
## HYPERPRIORS ##
sd_ethnic_group ~ dexp(3)
sd_territorial_section ~ dexp(2)
sd_clan ~ dexp(3)
sd_marital_status ~ dexp(3)
} "
#running the model in JAGS
n.chains = 3
n.iter = 1000
model <- jags.model(textConnection(model_string), data=data, n.chains=n.chains)
nodes <- c("beta", "marital_status_effect", "sd_marital_status",
"ethnic_group_effect", "sd_ethnic_group",
"territorial_section_effect", "sd_territorial_section",
"base_clan", "sd_clan")
samples <- coda.samples(model=model, variable.names=nodes, n.iter=n.iter, thin=1)
crosscorr.plot(samples)
hist(effectiveSize(samples))
range(effectiveSize(samples))
#dnorm(0, 1/1^2)
#building the model in JAGS
model_string = "
model {
for (j in c(1,49)) {
## LIKELIHOOD ##
for (i in 1:745) {
Y[i,j] ~ dbern(p[i,j])
logit(p[i,j]) <- base_clan[clan[i] + 1,j] +
beta[1,j]*sex[i] +
beta[2,j]*school_yrs[i] +
beta[3,j]*town_yrs[i] +
marital_status_effect[marital_status[i] + 1,j]
}
## PRIORS ##
for (i in c(1:3,7:9)) {
base_clan[i,j] ~ dnorm(ethnic_group_effect[ethnic_group[i] +1,j], 1/sd_clan^2)
}
for (i in 4:6) {
base_clan[i,j] ~ dnorm(territorial_section_effect[territorial_section[i] + 1,j]*equals(ethnic_group[i], 3), 1/sd_clan^2)
}
for (i in 1:4) {
ethnic_group_effect[i,j] ~ dnorm(0, 1/sd_ethnic_group^2)
}
for (i in 1:4) {
territorial_section_effect[i,j] ~ dnorm(0, 1/sd_territorial_section^2)
}
for(i in 1:3){
beta[i,j] ~ dnorm(0, 1/0.5^2)
}
for (i in 1:5) {
marital_status_effect[i,j] ~ dnorm(0, 1/sd_marital_status^2)
}
}
## HYPERPRIORS ##
sd_ethnic_group ~ dexp(3)
sd_territorial_section ~ dexp(2)
sd_clan ~ dexp(3)
sd_marital_status ~ dexp(3)
} "
#running the model in JAGS
n.chains = 3
n.iter = 1000
model <- jags.model(textConnection(model_string), data=data, n.chains=n.chains)
nodes <- c("beta", "marital_status_effect", "sd_marital_status",
"ethnic_group_effect", "sd_ethnic_group",
"territorial_section_effect", "sd_territorial_section",
"base_clan", "sd_clan")
samples <- coda.samples(model=model, variable.names=nodes, n.iter=n.iter, thin=1)
crosscorr.plot(samples)
hist(effectiveSize(samples))
range(effectiveSize(samples))
setwd("~/Documents/myDocuments/github/asuResearch/cultural_fst/code/")
#load library
library(rjags)
library(HDInterval)
library(RColorBrewer)
#read csv file
data = read.csv("../data/fst_data_coded.csv", header = T)
data = data[,c(1:11,11+order(apply(data[,12:60], MARGIN = 2, var), decreasing = TRUE))]
data$Y = data[,12:60]
#building the model in JAGS
model_string = "
model {
for (j in c(1,49)) {
## LIKELIHOOD ##
for (i in 1:745) {
Y[i,j] ~ dbern(p[i,j])
logit(p[i,j]) <- base_clan[clan[i] + 1,j] +
beta[2,j]*sex[i] +
beta[3,j]*school_yrs[i] +
beta[4,j]*town_yrs[i] +
marital_status_effect[marital_status[i] + 1,j]
}
## PRIORS ##
for (i in c(1:3,7:9)) {
base_clan[i,j] ~ dnorm(ethnic_group_effect[ethnic_group[i] +1,j], 1/sd_clan^2)
}
for (i in 4:6) {
base_clan[i,j] ~ dnorm(territorial_section_effect[territorial_section[i] + 1,j]*equals(ethnic_group[i], 3), 1/sd_clan^2)
}
for (i in 1:4) {
ethnic_group_effect[i,j] ~ dnorm(beta[1,j], 1/sd_ethnic_group^2)
}
for (i in 1:4) {
territorial_section_effect[i,j] ~ dnorm(0, 1/sd_territorial_section^2)
}
beta[1,j] ~ dnorm(0, 1/0.75^2)
for(i in 2:4){
beta[i,j] ~ dnorm(0, 1/0.5^2)
}
for (i in 1:5) {
marital_status_effect[i,j] ~ dnorm(0, 1/sd_marital_status^2)
}
}
## HYPERPRIORS ##
sd_ethnic_group ~ dexp(3)
sd_territorial_section ~ dexp(2)
sd_clan ~ dexp(3)
sd_marital_status ~ dexp(3)
} "
#running the model in JAGS
n.chains = 3
n.iter = 1000
model <- jags.model(textConnection(model_string), data=data, n.chains=n.chains)
nodes <- c("beta", "marital_status_effect", "sd_marital_status",
"ethnic_group_effect", "sd_ethnic_group",
"territorial_section_effect", "sd_territorial_section",
"base_clan", "sd_clan")
samples <- coda.samples(model=model, variable.names=nodes, n.iter=n.iter, thin=1)
crosscorr.plot(samples)
hist(effectiveSize(samples))
range(effectiveSize(samples))
effectiveSize(samples)
summary(samples)
start = Sys.time()
#load library
library(rjags)
library(HDInterval)
library(RColorBrewer)
#read csv file
data = read.csv("../data/fst_data_coded.csv", header = T)
data = data[,c(1:11,11+order(apply(data[,12:60], MARGIN = 2, var), decreasing = TRUE))]
data$Y = data[,12:60]
#building the model in JAGS
model_string = "
model {
for (j in c(1,49)) {
## LIKELIHOOD ##
for (i in 1:745) {
Y[i,j] ~ dbern(p[i,j])
logit(p[i,j]) <- base_clan[clan[i] + 1,j] +
beta[2,j]*sex[i] +
beta[3,j]*school_yrs[i] +
beta[4,j]*town_yrs[i] +
marital_status_effect[marital_status[i] + 1,j]
}
## PRIORS ##
for (i in c(1:3,7:9)) {
base_clan[i,j] ~ dnorm(ethnic_group_effect[ethnic_group[i] +1,j], 1/sd_clan^2)
}
for (i in 4:6) {
base_clan[i,j] ~ dnorm(territorial_section_effect[territorial_section[i] + 1,j]*equals(ethnic_group[i], 3), 1/sd_clan^2)
}
for (i in 1:4) {
ethnic_group_effect[i,j] ~ dnorm(beta[1,j], 1/sd_ethnic_group^2)
}
for (i in 1:4) {
territorial_section_effect[i,j] ~ dnorm(0, 1/sd_territorial_section^2)
}
beta[1,j] ~ dnorm(0, 1/0.75^2)
for(i in 2:4){
beta[i,j] ~ dnorm(0, 1/0.5^2)
}
for (i in 1:5) {
marital_status_effect[i,j] ~ dnorm(0, 1/sd_marital_status^2)
}
}
## HYPERPRIORS ##
sd_ethnic_group ~ dexp(3)
sd_territorial_section ~ dexp(2)
sd_clan ~ dexp(3)
sd_marital_status ~ dexp(3)
} "
#running the model in JAGS
n.chains = 3
n.iter = 1000
model <- jags.model(textConnection(model_string), data=data, n.chains=n.chains)
nodes <- c("beta", "marital_status_effect", "sd_marital_status",
"ethnic_group_effect", "sd_ethnic_group",
"territorial_section_effect", "sd_territorial_section",
"base_clan", "sd_clan")
samples <- coda.samples(model=model, variable.names=nodes, n.iter=n.iter, thin=1)
end = Sys.time()
end - start
50/2
25*12
300/60
# start = Sys.time()
#load library
library(rjags)
library(HDInterval)
library(RColorBrewer)
#read csv file
data = read.csv("../data/fst_data_coded.csv", header = T)
data = data[,c(1:11,11+order(apply(data[,12:60], MARGIN = 2, var), decreasing = TRUE))]
data$Y = data[,12:60]
#building the model in JAGS
model_string = "
model {
for (j in c(1,49)) {
## LIKELIHOOD ##
for (i in 1:745) {
Y[i,j] ~ dbern(p[i,j])
logit(p[i,j]) <- base_clan[clan[i] + 1,j] +
beta[2,j]*sex[i] +
beta[3,j]*school_yrs[i] +
beta[4,j]*town_yrs[i] +
marital_status_effect[marital_status[i] + 1,j]
}
## PRIORS ##
for (i in c(1:3,7:9)) {
base_clan[i,j] ~ dnorm(ethnic_group_effect[ethnic_group[i] +1,j], 1/sd_clan^2)
}
for (i in 4:6) {
base_clan[i,j] ~ dnorm(territorial_section_effect[territorial_section[i] + 1,j]*equals(ethnic_group[i], 3), 1/sd_clan^2)
}
for (i in 1:4) {
ethnic_group_effect[i,j] ~ dnorm(beta[1,j], 1/sd_ethnic_group^2)
}
for (i in 1:4) {
territorial_section_effect[i,j] ~ dnorm(0, 1/sd_territorial_section^2)
}
beta[1,j] ~ dnorm(0, 1/0.75^2)
for(i in 2:4){
beta[i,j] ~ dnorm(0, 1/0.5^2)
}
for (i in 1:5) {
marital_status_effect[i,j] ~ dnorm(0, 1/sd_marital_status^2)
}
}
## HYPERPRIORS ##
sd_ethnic_group ~ dexp(3)
sd_territorial_section ~ dexp(2)
sd_clan ~ dexp(3)
sd_marital_status ~ dexp(3)
} "
#running the model in JAGS
n.chains = 3
n.iter = 1000
model <- jags.model(textConnection(model_string), data=data, n.chains=n.chains)
nodes <- c("beta", "marital_status_effect", "sd_marital_status",
"ethnic_group_effect", "sd_ethnic_group",
"territorial_section_effect", "sd_territorial_section",
"base_clan", "sd_clan")
samples <- coda.samples(model=model, variable.names=nodes, n.iter=n.iter, thin=1)
#explore crosscorrelations
source("./crosscorrelations.R")
View(high_cors)
crosscorr.plot(samples)
hist(samples)
hist(effectiveSize(samples))
effectiveSize(samples)[effectiveSize(samples)<3000]
sort(effectiveSize(samples)[effectiveSize(samples)<3000])
