lwd = 2, col = "black", lty = 3)
lines(x = rep(median(logit2prob(sex_effect)), 2), y = c(0, 40),
lwd = 2, col = "black", lty = 2)
hist(logit2prob(school_yrs_effect), probability = T, col = palette_Set1[3], add = T)
#breaks = seq(from=0, to=1, by=0.005), add = T)
lines(density(logit2prob(school_yrs_effect)), lwd = 2, col = "maroon")
lines(x = rep(hdi(logit2prob(school_yrs_effect))[1], 2), y = c(0, 40),
lwd = 2, col = "black", lty = 3)
lines(x = rep(hdi(logit2prob(school_yrs_effect))[2], 2), y = c(0, 40),
lwd = 2, col = "black", lty = 3)
lines(x = rep(median(logit2prob(school_yrs_effect)), 2), y = c(0, 40),
lwd = 2, col = "black", lty = 2)
legend("topleft", legend = c("Sex", "School Year"), fill = palette_Set1[c(2:3)],
bty = "n", xpd = NA, cex = 0.8, inset = c(0.95,0.42),
title = "Magnitude effect", title.adj = 1)
title(xlab = "Probability", outer = TRUE, line = 1)
title(ylab = "Density", outer = TRUE, line = 1)
dev.off()
par(oma = c(3,2.5,2,2), mar = c(2, 2, 2, 3))
hist(logit2prob(sex_effect), probability = T, xlim = c(0.2,0.6), ylim = c(0,40), col = palette_Set1[2],
xlab = "Probability", main = "")
lines(density(logit2prob(sex_effect)), lwd = 2, col = "maroon")
lines(x = rep(hdi(logit2prob(sex_effect))[1], 2), y = c(0, 40),
lwd = 2, col = "black", lty = 3)
lines(x = rep(hdi(logit2prob(sex_effect))[2], 2), y = c(0, 40),
lwd = 2, col = "black", lty = 3)
lines(x = rep(median(logit2prob(sex_effect)), 2), y = c(0, 40),
lwd = 2, col = "black", lty = 2)
hist(logit2prob(school_yrs_effect), probability = T, col = palette_Set1[3], add = T)
#breaks = seq(from=0, to=1, by=0.005), add = T)
lines(density(logit2prob(school_yrs_effect)), lwd = 2, col = "maroon")
lines(x = rep(hdi(logit2prob(school_yrs_effect))[1], 2), y = c(0, 40),
lwd = 2, col = "black", lty = 3)
lines(x = rep(hdi(logit2prob(school_yrs_effect))[2], 2), y = c(0, 40),
lwd = 2, col = "black", lty = 3)
lines(x = rep(median(logit2prob(school_yrs_effect)), 2), y = c(0, 40),
lwd = 2, col = "black", lty = 2)
legend("topleft", legend = c("Sex", "School Year"), fill = palette_Set1[c(2:3)],
bty = "n", xpd = NA, cex = 0.8, inset = c(0.95,0.42),
title = "Magnitude effect", title.adj = 1)
title(xlab = "Probability", outer = TRUE, line = 1)
title(ylab = "Density", outer = TRUE, line = 1)
dev.off()
graphics.off()
pdf("../figures/figure6.pdf")
par(oma = c(3,2.5,2,2), mar = c(2, 2, 2, 3))
hist(logit2prob(sex_effect), probability = T, xlim = c(0.2,0.6), ylim = c(0,40), col = palette_Set1[2],
xlab = "Probability", main = "")
lines(density(logit2prob(sex_effect)), lwd = 2, col = "maroon")
lines(x = rep(hdi(logit2prob(sex_effect))[1], 2), y = c(0, 40),
lwd = 2, col = "black", lty = 3)
lines(x = rep(hdi(logit2prob(sex_effect))[2], 2), y = c(0, 40),
lwd = 2, col = "black", lty = 3)
lines(x = rep(median(logit2prob(sex_effect)), 2), y = c(0, 40),
lwd = 2, col = "black", lty = 2)
hist(logit2prob(school_yrs_effect), probability = T, col = palette_Set1[3], add = T)
#breaks = seq(from=0, to=1, by=0.005), add = T)
lines(density(logit2prob(school_yrs_effect)), lwd = 2, col = "maroon")
lines(x = rep(hdi(logit2prob(school_yrs_effect))[1], 2), y = c(0, 40),
lwd = 2, col = "black", lty = 3)
lines(x = rep(hdi(logit2prob(school_yrs_effect))[2], 2), y = c(0, 40),
lwd = 2, col = "black", lty = 3)
lines(x = rep(median(logit2prob(school_yrs_effect)), 2), y = c(0, 40),
lwd = 2, col = "black", lty = 2)
legend("topleft", legend = c("Sex", "School Year"), fill = palette_Set1[c(2:3)],
bty = "n", xpd = NA, cex = 0.8, inset = c(0.95,0.42),
title = "Magnitude effect", title.adj = 1)
title(xlab = "Probability", outer = TRUE, line = 1)
title(ylab = "Density", outer = TRUE, line = 1)
dev.off()
## to reproduce the results I obtained in my analysis, make sure to include the same seed value
set.seed(594)
## generate slope values (probabilities on the logit scale)
slope_B <- rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, rexp(1,2))
slope_R <- rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, rexp(1,2))
slope_S <- rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, rexp(1,2))
slope_T <- rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, rexp(1,2))
slope_Tk <- rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, rexp(1,2)) + rnorm(500, 0, rexp(1,1))
slope_Tb <- rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, rexp(1,2)) + rnorm(500, 0, rexp(1,1))
slope_Ty <- rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, rexp(1,2)) + rnorm(500, 0, rexp(1,1))
slopes_all = list(slope_B, slope_R,
slope_S, slope_T,
slope_Tk, slope_Tb, slope_Ty)
graphics.off()
pdf("../figures/figure2.pdf", width = 12.5)
par(mfrow= c(1, 2), oma = c(4,3,4,0), mar = c(0.5, 2, 0.2, 3))
## width and space values for the bar plot bins (will be needed for later)
bplot_width = 1
bplot_space = 0.2
plot(1,1,col="white", xlim = c(0,5), ylim = c(0,1), axes = FALSE, ylab = "Probability", xlab = "")
grid(nx = 0, ny = NULL)
## plot a bar plot of raw data
barplot(prop.table(table(data$kidnap, data$ethnic_group), margin = 2)[2,], beside = T,
width = bplot_width, space = bplot_space, xlim = c(0,5), ylim = c(0,1), add = T,
names.arg = c("Borana", "Rendille", "Samburu", "Turkana"), col = palette_Paired[2])
for(i in 0:3){
## convert estimated logit values to probabilities
p = logit2prob(slopes_all[[i+1]])
## formula to position the prior intervals on the x-axis
pos_x = bplot_width*(i+0.5) + bplot_space*(i+1)
rect(xleft = pos_x-0.05, ybottom = hdi(p)[1],
xright = pos_x+0.05, ytop = hdi(p)[2],
lwd = 1, col = palette_Dark2[6], border = "black")
# segments(x0 = pos_x, y0 = quantile(y_all[[i+1]], 0.025),
#          x1 = pos_x, y1 = quantile(y_all[[i+1]], 0.975),
#          lwd = 3, col = "black")
lines(x = c(pos_x-0.05, pos_x+0.05), y = rep(median(p),2), lwd = 2, lty = 1)
}
plot(1,1,col="white", xlim = c(0,5), ylim = c(0,1), axes = F, xlab = "")
grid(nx = 0, ny = NULL)
barplot(prop.table(table(data$kidnap, data$territorial_section)[,2:4], margin = 2)[2,], beside = T,
width = bplot_width, space = bplot_space, xlim = c(0,5), add = T,
names.arg = c("Kwatela", "Ngibochoros", "Ngiyapakuno"), col = palette_Paired[2], ylim = c(0,1))
for(i in 0:2){
## convert estimated logit values to probabilities
p = logit2prob(slopes_all[[i+4]])
## formula to position the prior intervals on the x-axis
pos_x = bplot_width*(i+0.5) + bplot_space*(i+1)
rect(xleft = pos_x-0.05, ybottom = hdi(p)[1],
xright = pos_x+0.05, ytop = hdi(p)[2],
lwd = 1, col = palette_Dark2[6], border = "black")
# segments(x0 = pos_x, y0 = quantile(y_all[[i+1]], 0.025),
#          x1 = pos_x, y1 = quantile(y_all[[i+1]], 0.975),
#          lwd = 3, col = "black")
lines(x = c(pos_x-0.05, pos_x+0.05), y = rep(median(p),2), lwd = 2, lty = 1)
}
title(ylab = "p(DISAGREE)", outer = TRUE, line = 1.5)
par(xpd=NA)
text(-7.45, 1.095, "a", cex = 2)
text(-1, 1.1, "b", cex = 2)
## reset graphics parameters
dev.off()
## to reproduce the results I obtained in my analysis, make sure to include the same seed value
set.seed(594)
## generate slope values (probabilities on the logit scale)
slope_B <- rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, rexp(1,2))
slope_R <- rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, rexp(1,2))
slope_S <- rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, rexp(1,2))
slope_T <- rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, rexp(1,2))
slope_Tk <- rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, rexp(1,2)) + rnorm(500, 0, rexp(1,1))
slope_Tb <- rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, rexp(1,2)) + rnorm(500, 0, rexp(1,1))
slope_Ty <- rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, 0.5) + rnorm(500, 0, rexp(1,2)) + rnorm(500, 0, rexp(1,1))
slopes_all = list(slope_B, slope_R,
slope_S, slope_T,
slope_Tk, slope_Tb, slope_Ty)
graphics.off()
pdf("../figures/figure2.pdf", width = 12.5)
par(mfrow= c(1, 2), oma = c(4,3,4,0), mar = c(0.5, 2, 0.2, 3))
## width and space values for the bar plot bins (will be needed for later)
bplot_width = 1
bplot_space = 0.2
plot(1,1,col="white", xlim = c(0,5), ylim = c(0,1), axes = FALSE, ylab = "Probability", xlab = "")
grid(nx = 0, ny = NULL)
## plot a bar plot of raw data
barplot(prop.table(table(data$kidnap, data$ethnic_group), margin = 2)[2,], beside = T,
width = bplot_width, space = bplot_space, xlim = c(0,5), ylim = c(0,1), add = T,
names.arg = c("Borana", "Rendille", "Samburu", "Turkana"), col = palette_Paired[2])
for(i in 0:3){
## convert estimated logit values to probabilities
p = logit2prob(slopes_all[[i+1]])
## formula to position the prior intervals on the x-axis
pos_x = bplot_width*(i+0.5) + bplot_space*(i+1)
rect(xleft = pos_x-0.05, ybottom = hdi(p)[1],
xright = pos_x+0.05, ytop = hdi(p)[2],
lwd = 1, col = palette_Dark2[6], border = "black")
# segments(x0 = pos_x, y0 = quantile(y_all[[i+1]], 0.025),
#          x1 = pos_x, y1 = quantile(y_all[[i+1]], 0.975),
#          lwd = 3, col = "black")
lines(x = c(pos_x-0.05, pos_x+0.05), y = rep(median(p),2), lwd = 2, lty = 1)
}
plot(1,1,col="white", xlim = c(0,5), ylim = c(0,1), axes = F, xlab = "")
grid(nx = 0, ny = NULL)
barplot(prop.table(table(data$kidnap, data$territorial_section)[,2:4], margin = 2)[2,], beside = T,
width = bplot_width, space = bplot_space, xlim = c(0,5), add = T,
names.arg = c("Kwatela", "Ngibochoros", "Ngiyapakuno"), col = palette_Paired[2], ylim = c(0,1))
for(i in 0:2){
## convert estimated logit values to probabilities
p = logit2prob(slopes_all[[i+4]])
## formula to position the prior intervals on the x-axis
pos_x = bplot_width*(i+0.5) + bplot_space*(i+1)
rect(xleft = pos_x-0.05, ybottom = hdi(p)[1],
xright = pos_x+0.05, ytop = hdi(p)[2],
lwd = 1, col = palette_Dark2[6], border = "black")
# segments(x0 = pos_x, y0 = quantile(y_all[[i+1]], 0.025),
#          x1 = pos_x, y1 = quantile(y_all[[i+1]], 0.975),
#          lwd = 3, col = "black")
lines(x = c(pos_x-0.05, pos_x+0.05), y = rep(median(p),2), lwd = 2, lty = 1)
}
title(ylab = "p(DISAGREE)", outer = TRUE, line = 1.5)
par(xpd=NA)
text(-7.45, 1.095, "a", cex = 2)
text(-1, 1.1, "b", cex = 2)
## reset graphics parameters
dev.off()
summary(samples)
## clear out all graphics devices and objects in the workspace
graphics.off()
rm(list=ls())
require(rjags)
require(HDInterval)
require(RColorBrewer)
## load up the functions to be used in this analysis
source("./functions_bayesian_artinian.R")
## to reproduce the results I obtained in my analysis, make sure to include the same seed value
set.seed(594)
palette_Paired = brewer.pal(12, "Paired")
palette_Dark2 = brewer.pal(8, "Dark2")
palette_Set1 = brewer.pal(9, "Set1")
## change directory path as needed
data = read.csv("../data/data_kidnap.csv", header = T)
## store the columns in the dataset in a list
data_list = list(N=length(data$subject_id), kidnap = data$kidnap,
ethnic_group=data$ethnic_group, sex=data$sex, marital_status=data$marital_status,
territorial_section=data$territorial_section,
school_yrs=data$school_yrs, town_yrs=data$town_yrs)
graphics.off()
## start a pdf graphics device (uncomment and change as needed)
pdf(file = "../figures/figure1.pdf", width = 10)
par(mfrow= c(1, 2), oma = c(4,4,4,1), mar = c(0.5, 2, 1, 2), xpd = NA)
## individual responses per ethnic group
barplot(prop.table(table(data$kidnap, data$ethnic_group), margin = 2), beside = T,
names.arg = c("Borana", "Rendille", "Samburu", "Turkana"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-2, 1.125, "a", cex = 2)
## individual responses per territorial section
barplot(prop.table(table(data$kidnap, data$territorial_section)[,2:4], margin = 2), beside = T,
names.arg = c("Kwatela", "Ngibochoros", "Ngiyapakuno"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-1, 1.125, "b", cex = 2)
## plot legends
legend("topright", legend = c("Agree", "Disagree"), fill = palette_Paired[c(2,6)])
title(main = "", xlab = "", ylab = "Probability", outer = TRUE, line = 2.25)
## close current graphics device
dev.off()
model_string = "model {
## likelihood:
for (i in 1:N) {
kidnap[i] ~ dbern(p[i])
logit(p[i]) <- baseline[ethnic_group[i] + 1] +
marital_status_effect[marital_status[i] + 1] +
territorial_section_effect[territorial_section[i] + 1]*equals(ethnic_group[i], 3) +
beta[1]*sex[i] +
beta[2]*(school_yrs[i]) +
beta[3]*(town_yrs[i])
}
## priors:
for (i in 1:4) {
baseline[i] ~ dnorm(0, 1/5^2)
}
for(i in 1:3){
beta[i] ~ dnorm(0, 1/0.5^2)
}
for (i in 1:5) {
marital_status_effect[i] ~ dnorm(0, 1/sd_marital_status^2)
}
for (i in 1:4) {
territorial_section_effect[i] ~ dnorm(0, 1/sd_territorial_section^2)
}
## hyperpriors:
sd_marital_status ~ dexp(2)
sd_territorial_section ~ dexp(1)
} "
## initialize the model
model <- jags.model(textConnection(model_string), data=data_list, n.chains=3)
## save the names of the generated samples you want to analyze
nodes <- c("baseline", "beta", "marital_status_effect", "sd_marital_status", "territorial_section_effect", "sd_territorial_section")
## run the chains (take around 1 minute)
samples <- coda.samples(model,nodes,10000,2)
## check for convergence across the 3 MCMC chains
gelman.diag(samples)
## check for autocorrelation among estimates parameter values across all 3 chains
autocorr.diag(samples)
## visualize the cross correlations between the estimated parameter values
crosscorr.plot(samples)
## check the effective sample size of each estimated parameter value
effectiveSize(samples)
## check summary statistics of estimated parameter values
summary(samples)
## clear out all graphics devices and objects in the workspace
graphics.off()
rm(list=ls())
require(rjags)
require(HDInterval)
require(RColorBrewer)
## load up the functions to be used in this analysis
source("./functions_bayesian_artinian.R")
## to reproduce the results I obtained in my analysis, make sure to include the same seed value
set.seed(594)
palette_Paired = brewer.pal(12, "Paired")
palette_Dark2 = brewer.pal(8, "Dark2")
palette_Set1 = brewer.pal(9, "Set1")
## change directory path as needed
data = read.csv("../data/data_kidnap.csv", header = T)
## store the columns in the dataset in a list
data_list = list(N=length(data$subject_id), kidnap = data$kidnap,
ethnic_group=data$ethnic_group, sex=data$sex, marital_status=data$marital_status,
territorial_section=data$territorial_section,
school_yrs=data$school_yrs, town_yrs=data$town_yrs)
graphics.off()
## start a pdf graphics device (uncomment and change as needed)
pdf(file = "../figures/figure1.pdf", width = 10)
par(mfrow= c(1, 2), oma = c(4,4,4,1), mar = c(0.5, 2, 1, 2), xpd = NA)
## individual responses per ethnic group
barplot(prop.table(table(data$kidnap, data$ethnic_group), margin = 2), beside = T,
names.arg = c("Borana", "Rendille", "Samburu", "Turkana"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-2, 1.125, "a", cex = 2)
## individual responses per territorial section
barplot(prop.table(table(data$kidnap, data$territorial_section)[,2:4], margin = 2), beside = T,
names.arg = c("Kwatela", "Ngibochoros", "Ngiyapakuno"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-1, 1.125, "b", cex = 2)
## plot legends
legend("topright", legend = c("Agree", "Disagree"), fill = palette_Paired[c(2,6)])
title(main = "", xlab = "", ylab = "Probability", outer = TRUE, line = 2.25)
## close current graphics device
dev.off()
model_string = "model {
## likelihood:
for (i in 1:N) {
kidnap[i] ~ dbern(p[i])
logit(p[i]) <- baseline[ethnic_group[i] + 1] +
marital_status_effect[marital_status[i] + 1] +
territorial_section_effect[territorial_section[i] + 1]*equals(ethnic_group[i], 3) +
beta[1]*sex[i] +
beta[2]*(school_yrs[i]) +
beta[3]*(town_yrs[i])
}
## priors:
for (i in 1:4) {
baseline[i] ~ dnorm(0, 1/5^2)
}
for(i in 1:3){
beta[i] ~ dnorm(0, 1/0.5^2)
}
for (i in 1:5) {
marital_status_effect[i] ~ dnorm(0, 1/sd_marital_status^2)
}
for (i in 1:4) {
territorial_section_effect[i] ~ dnorm(0, 1/sd_territorial_section^2)
}
## hyperpriors:
sd_marital_status ~ dexp(2)
sd_territorial_section ~ dexp(1)
} "
## initialize the model
model <- jags.model(textConnection(model_string), data=data_list, n.chains=3)
## save the names of the generated samples you want to analyze
nodes <- c("baseline", "beta", "marital_status_effect", "sd_marital_status", "territorial_section_effect", "sd_territorial_section")
## run the chains (take around 1 minute)
samples <- coda.samples(model,nodes,10000,2)
## check for convergence across the 3 MCMC chains
gelman.diag(samples)
## check for autocorrelation among estimates parameter values across all 3 chains
autocorr.diag(samples)
## visualize the cross correlations between the estimated parameter values
crosscorr.plot(samples)
## check the effective sample size of each estimated parameter value
effectiveSize(samples)
## check summary statistics of estimated parameter values
summary(samples)
graphics.off()
rm(list=ls())
source("./kidnap_model_artinian.R")
graphics.off()
## start a pdf graphics device (uncomment and change as needed)
pdf(file = "../figures/figure1.pdf", width = 10)
par(mfrow= c(1, 2), oma = c(4,4,4,1), mar = c(0.5, 2, 1, 2), xpd = NA)
## individual responses per ethnic group
barplot(prop.table(table(data$kidnap, data$ethnic_group), margin = 2), beside = T,
names.arg = c("Borana", "Rendille", "Samburu", "Turkana"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-1, 1.125, "a", cex = 2)
## individual responses per territorial section
barplot(prop.table(table(data$kidnap, data$territorial_section)[,2:4], margin = 2), beside = T,
names.arg = c("Kwatela", "Ngibochoros", "Ngiyapakuno"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-1, 1.125, "b", cex = 2)
## plot legends
legend("topright", legend = c("Agree", "Disagree"), fill = palette_Paired[c(2,6)])
title(main = "", xlab = "", ylab = "Probability", outer = TRUE, line = 2.25)
## close current graphics device
dev.off()
graphics.off()
## start a pdf graphics device (uncomment and change as needed)
pdf(file = "../figures/figure1.pdf", width = 10)
par(mfrow= c(1, 2), oma = c(4,4,4,1), mar = c(0.5, 2, 1, 2), xpd = NA)
## individual responses per ethnic group
barplot(prop.table(table(data$kidnap, data$ethnic_group), margin = 2), beside = T,
names.arg = c("Borana", "Rendille", "Samburu", "Turkana"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(0, 1.125, "a", cex = 2)
## individual responses per territorial section
barplot(prop.table(table(data$kidnap, data$territorial_section)[,2:4], margin = 2), beside = T,
names.arg = c("Kwatela", "Ngibochoros", "Ngiyapakuno"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-1, 1.125, "b", cex = 2)
## plot legends
legend("topright", legend = c("Agree", "Disagree"), fill = palette_Paired[c(2,6)])
title(main = "", xlab = "", ylab = "Probability", outer = TRUE, line = 2.25)
## close current graphics device
dev.off()
par(mfrow= c(1, 2), oma = c(4,4,4,1), mar = c(0.5, 2, 1, 2), xpd = NA)
## individual responses per ethnic group
barplot(prop.table(table(data$kidnap, data$ethnic_group), margin = 2), beside = T,
names.arg = c("Borana", "Rendille", "Samburu", "Turkana"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(0, 1.125, "a", cex = 2)
## individual responses per territorial section
barplot(prop.table(table(data$kidnap, data$territorial_section)[,2:4], margin = 2), beside = T,
names.arg = c("Kwatela", "Ngibochoros", "Ngiyapakuno"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-1, 1.125, "b", cex = 2)
## plot legends
legend("topright", legend = c("Agree", "Disagree"), fill = palette_Paired[c(2,6)])
title(main = "", xlab = "", ylab = "Probability", outer = TRUE, line = 2.25)
text(-2, 1.25, "a", cex = 2)
text(-2, 1, "a", cex = 2)
graphics.off()
## start a pdf graphics device (uncomment and change as needed)
pdf(file = "../figures/figure1.pdf", width = 10)
par(mfrow= c(1, 2), oma = c(4,4,4,1), mar = c(0.5, 2, 1, 2), xpd = NA)
## individual responses per ethnic group
barplot(prop.table(table(data$kidnap, data$ethnic_group), margin = 2), beside = T,
names.arg = c("Borana", "Rendille", "Samburu", "Turkana"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-2, 1, "a", cex = 2)
## individual responses per territorial section
barplot(prop.table(table(data$kidnap, data$territorial_section)[,2:4], margin = 2), beside = T,
names.arg = c("Kwatela", "Ngibochoros", "Ngiyapakuno"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-1, 1.125, "b", cex = 2)
## plot legends
legend("topright", legend = c("Agree", "Disagree"), fill = palette_Paired[c(2,6)])
title(main = "", xlab = "", ylab = "Probability", outer = TRUE, line = 2.25)
## close current graphics device
dev.off()
graphics.off()
## start a pdf graphics device (uncomment and change as needed)
pdf(file = "../figures/figure1.pdf", width = 10)
par(mfrow= c(1, 2), oma = c(4,4,4,1), mar = c(0.5, 2, 1, 2), xpd = NA)
## individual responses per ethnic group
barplot(prop.table(table(data$kidnap, data$ethnic_group), margin = 2), beside = T,
names.arg = c("Borana", "Rendille", "Samburu", "Turkana"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-2, 1.5, "a", cex = 2)
## individual responses per territorial section
barplot(prop.table(table(data$kidnap, data$territorial_section)[,2:4], margin = 2), beside = T,
names.arg = c("Kwatela", "Ngibochoros", "Ngiyapakuno"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-1, 1.125, "b", cex = 2)
## plot legends
legend("topright", legend = c("Agree", "Disagree"), fill = palette_Paired[c(2,6)])
title(main = "", xlab = "", ylab = "Probability", outer = TRUE, line = 2.25)
## close current graphics device
dev.off()
par(mfrow= c(1, 2), oma = c(4,4,4,1), mar = c(0.5, 2, 1, 2), xpd = NA)
## individual responses per ethnic group
barplot(prop.table(table(data$kidnap, data$ethnic_group), margin = 2), beside = T,
names.arg = c("Borana", "Rendille", "Samburu", "Turkana"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-1, 1.5, "a", cex = 2)
text(-1, -1.5, "a", cex = 2)
text(-2, -1.5, "a", cex = 2)
text(-2, 1.5, "a", cex = 2)
text(-2, 1.125, "a", cex = 2)
text(-2, 1.225, "a", cex = 2)
text(-2, 1.125, "a", cex = 2)
text(-3, 1.125, "a", cex = 2)
text(-1, 1.125, "a", cex = 2)
text(-0.1, 1.125, "a", cex = 2)
graphics.off()
## start a pdf graphics device (uncomment and change as needed)
pdf(file = "../figures/figure1.pdf", width = 10)
par(mfrow= c(1, 2), oma = c(4,4,4,1), mar = c(0.5, 2, 1, 2), xpd = NA)
## individual responses per ethnic group
barplot(prop.table(table(data$kidnap, data$ethnic_group), margin = 2), beside = T,
names.arg = c("Borana", "Rendille", "Samburu", "Turkana"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-0.1, 1.125, "a", cex = 2)
## individual responses per territorial section
barplot(prop.table(table(data$kidnap, data$territorial_section)[,2:4], margin = 2), beside = T,
names.arg = c("Kwatela", "Ngibochoros", "Ngiyapakuno"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-1, 1.125, "b", cex = 2)
## plot legends
legend("topright", legend = c("Agree", "Disagree"), fill = palette_Paired[c(2,6)])
title(main = "", xlab = "", ylab = "Probability", outer = TRUE, line = 2.25)
## close current graphics device
dev.off()
graphics.off()
## start a pdf graphics device (uncomment and change as needed)
pdf(file = "../figures/figure1.pdf", width = 10)
par(mfrow= c(1, 2), oma = c(4,4,4,1), mar = c(0.5, 2, 1, 2), xpd = NA)
## individual responses per ethnic group
barplot(prop.table(table(data$kidnap, data$ethnic_group), margin = 2), beside = T,
names.arg = c("Borana", "Rendille", "Samburu", "Turkana"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-0.2, 1.125, "a", cex = 2)
## individual responses per territorial section
barplot(prop.table(table(data$kidnap, data$territorial_section)[,2:4], margin = 2), beside = T,
names.arg = c("Kwatela", "Ngibochoros", "Ngiyapakuno"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-1, 1.125, "b", cex = 2)
## plot legends
legend("topright", legend = c("Agree", "Disagree"), fill = palette_Paired[c(2,6)])
title(main = "", xlab = "", ylab = "Probability", outer = TRUE, line = 2.25)
## close current graphics device
dev.off()
getwd()
graphics.off()
## start a pdf graphics device (uncomment and change as needed)
pdf(file = "../figures/figure1.pdf", width = 10)
par(mfrow= c(1, 2), oma = c(4,4,4,1), mar = c(0.5, 2, 1, 2), xpd = NA)
## individual responses per ethnic group
barplot(prop.table(table(data$kidnap, data$ethnic_group), margin = 2), beside = T,
names.arg = c("Borana", "Rendille", "Samburu", "Turkana"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-2, 1.125, "a", cex = 2)
## individual responses per territorial section
barplot(prop.table(table(data$kidnap, data$territorial_section)[,2:4], margin = 2), beside = T,
names.arg = c("Kwatela", "Ngibochoros", "Ngiyapakuno"), col = palette_Paired[c(2,6)], ylim = c(0,1))
text(-1, 1.125, "b", cex = 2)
## plot legends
legend("topright", legend = c("Agree", "Disagree"), fill = palette_Paired[c(2,6)])
title(main = "", xlab = "", ylab = "Probability", outer = TRUE, line = 2.25)
## close current graphics device
dev.off()
summary(samples)
effectiveSize(samples)
min(effectiveSize(samples))
max(effectiveSize(samples))
